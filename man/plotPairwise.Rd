% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotPairwise.R
\name{plotPairwise}
\alias{plotPairwise}
\title{Plot Pairwise Values from a GRangeList}
\usage{
plotPairwise(
  x,
  var,
  colour = NULL,
  index = c(1, 2),
  xside = c("boxplot", "density", "violin", "none"),
  yside = c("boxplot", "density", "violin", "none"),
  side_width = c(0.3, 0.4),
  side_alpha = 1,
  xside_label_pos = "right",
  yside_label_wrap = scales::label_wrap(10),
  line_col = "blue",
  line_type = 1,
  line_width = 1,
  text_geom = c("text", "label", "none"),
  text_col = "black",
  text_size = 4,
  text_pos = c(0.05, 0.95),
  text_alpha = 1,
  sep = " - ",
  simplify_equal = TRUE,
  plot_theme = theme_get(),
  ...
)
}
\arguments{
\item{x}{A GRangesList}

\item{var}{The colunm to compare between list elements}

\item{colour}{Optional column to use for combining across elements and
setting point colour}

\item{index}{Which list elements to compare}

\item{xside, yside}{Will call geom_(x/y)side* from the package ggside and
show additional panels on the right and top of the plot}

\item{side_width}{Set the relative widths of the side panels}

\item{side_alpha}{Set the transparency of any side_(x/y) panels}

\item{xside_label_pos}{Position for axis_labels in the top panel when using
a discrete axis}

\item{yside_label_wrap}{Wrapping for axis labels on the right-side panel when
using a discrete axis. Set to waiver() to turn off wrapping}

\item{line_col, line_type, line_width}{Parameters for adding a regression line
through the points. Set linecol to either \code{NULL} or \code{NA} to hide this line}

\item{text_geom}{Used to add correlation coefficients for the two values}

\item{text_col, text_size, text_alpha}{Parameters for displaying the correlation}

\item{text_pos}{Place the correlation coefficient within the plotting region}

\item{sep}{Text separator used to separate categories when specifying colour}

\item{simplify_equal}{logical(1) When combining columns from both elements
for the colour categories, should shared values be annotated as 'Both ...'
instead of having longer, more difficult to read annotations.}

\item{plot_theme}{Sets the initial theme by using the default theme for the
current R session via get_theme()}

\item{...}{Passed to \code{geom_point()} for the main panel}
}
\value{
A \code{ggplot2} object
}
\description{
Plot Pairwise Values from a GRangeList by overlapping GRanges
}
\details{
This function enables pairwise plotting of two elements within a GRangesList.
All elements of the GRangesList will contain the same columns, so a set of
consensus ranges are first formed, before then taking all values from each
GRangesList element which overlap the range and producing a piarwise plot.

Given that not all ranges will have values in both elements, side panels are
produced which can show the distribution of plotted values, along with those
which are only found in one of the foundational GRanges. These can take the
form of density, violin or boxplots.

Addition columns, such as Differential Signal status can also be used to
form pairwise groups and colour the points.

A regression line and correlation co-efficient are added to the plot by
default, but can be hidden easily if preferred
}
\examples{
theme_set(theme_bw())
set.seed(100)
gr1 <- GRanges(paste0("chr1:", seq(10, 150, by = 10)))
width(gr1) <- 5
gr1$logFC <- rnorm(length(gr1))
gr1$status <- dplyr::case_when(
  gr1$logFC > 0.5 ~ "Increased",
  gr1$logFC < -0.5 ~ "Decreased",
  TRUE ~ "Unchanged"
)
gr2 <-  GRanges(paste0("chr1:", seq(51, 250, by = 15)))
width(gr2) <- 4
gr2$logFC <- rnorm(length(gr2))
gr2$status <- dplyr::case_when(
  gr2$logFC > 0.5 ~ "Increased",
  gr2$logFC < -0.5 ~ "Decreased",
  TRUE ~ "Unchanged"
)
grl <- GRangesList(TF1 = gr1, TF2 = gr2)

# Using the defaults
plotPairwise(grl, var = "logFC")

# Density plots on the side panels
plotPairwise(
  grl, var = "logFC", xside = "density", yside = "density", side_alpha = 0.5
)

# Turning off side panels, regression line and correlations
plotPairwise(
  grl, var = "logFC", xside = "none", yside = "none", 
  text_geom = "none", line_col = NULL
)

# Add colours using the status column
plotPairwise(grl, var = "logFC", colour = "status") + 
  scale_fill_manual(values = rep_len(c("blue", "red", "white", "grey"), 8)) +
  guides(fill = "none")

}
